kafka.bootstrap-servers=velomobile-01.srvs.cloudkafka.com:9094,velomobile-02.srvs.cloudkafka.com:9094,velomobile-03.srvs.cloudkafka.com:9094 
kafka.topic.position=z3l1kzly-show_position
kafka.topic.recommendation=z3l1kzly-recommendation
kafka.groupId=my-first-application
kafka.autoreset=earliest
kafka.username=z3l1kzly
kafka.password=XmcIA7zRmPw4ZRba-YIy9muDgZKEcBWy
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.consumer.properties.spring.json.add.type.headers=false

#
#spring.kafka.bootstrap-servers=${CLOUDKARAFKA_BROKERS:velomobile-01.srvs.cloudkafka.com:9094,velomobile-02.srvs.cloudkafka.com:9094,velomobile-03.srvs.cloudkafka.com:9094}
#spring.kafka.properties.security.protocol=SASL_SSL
#spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256
#spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="${CLOUDKARAFKA_USERNAME}" password="${CLOUDKARAFKA_PASSWORD}";
#spring.kafka.consumer.group-id=${CLOUDKARAFKA_USERNAME}-consumers
#
#spring.kafka.consumer.auto-offset-reset=latest
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=sample.kafka
#
#cloudkarafka.topic=${CLOUDKARAFKA_USERNAME}-default
